#!/usr/bin/bash
################################################################################
### File: install
### Auth: a
### Date: 2019-3-25
### Info: Update local copies of the config file and creates symbolic links
################################################################################

# TODO
# create a merge function with an interactive option or clobber 
# add getopts for clap

################################################################################
### Vars
################################################################################

CONFIGS=( config/* )	\
SCRIPTS=( scripts/* )	\
HOMIE_DIR=$(pwd)

################################################################################
### Config
################################################################################

# Make sure the config directorie exist
if [ ! -d $HOME/.config ]; then
    mkdir -p $HOME/.config
fi

for entry in ${CONFIGS[@]}; do
    # If it is a file, symlink in home
    if [ -f $entry ]; then
	    printf "HOMIE - LINKING: ${HOMIE_DIR}/${entry} -> ${HOME}/.$(basename ${entry})\n"
	    ln -sf "${HOMIE_DIR}/${entry}" "${HOME}/.$(basename ${entry})"
    # If it is a dir, remove existing dir in .config and symlink 
    else
	printf "HOMIE - DELETED: ${HOME}/.${entry}\n"
	rm -rf "${HOME}/.${entry}"
	printf "HOMIE - LINKING: ${HOMIE_DIR}/${entry} -> ${HOME}/.${entry}\n"
	ln -sf "${HOMIE_DIR}/${entry}" "${HOME}/.${entry}"
    fi
done

################################################################################
### Scripts
################################################################################

if [ ! -d $HOME/.local/scripts ]; then
    printf "HOMIE - DELETED: ${HOME}/.local/scripts\n"
    rm -rf $HOME/.local/scripts
fi

# Symlink dir and leave it at that
printf "HOMIE - LINKING: ${HOMIE_DIR}/scripts -> ${HOME}/.local/scripts\n" 
ln -sf "${HOMIE_DIR}/scripts" "${HOME}/.local/scripts"


#vim: ts=4:ss=4:ff=sh
